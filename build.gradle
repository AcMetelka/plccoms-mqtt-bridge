import java.util.regex.Pattern

plugins {
    id 'java'
    id "com.google.cloud.tools.jib" version "2.4.0"
}

def getVersionTag = { ->
    String cmd = "git describe --tag --always --long --dirty"
    Process output = cmd.execute()
    String gitRevision = output.text.trim()
    return Pattern.compile('-dirty$').matcher(gitRevision).replaceAll(new Date().format("-yyyy-MM-dd'T'HH-mm-ss"))
}

version = getVersionTag()
logger.lifecycle("Version Tag: {}", getVersionTag());

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.3'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.3'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.0'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.11.0'

    compile group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.2.4'


    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jib {
    from {
        image = "openjdk@sha256:5e9391cb672d672f82f7a55b6f20c89b07d573759c8102fce7bd9e1fb06c9e9f" //11-jre
    }
    to {
        image = "ocervinka/plccoms-mqtt-bridge:$version"
    }
    container {
        mainClass = project.ext.mainClass
        environment = [VERSION_TAG: jib.to.image]
    }
}


task runLocal(type: JavaExec) {
    dependsOn tasks.classes
    description = "Runs in local JVM using deploy/local/config.yaml"
    main = project.ext.mainClass
    classpath = sourceSets.main.runtimeClasspath
    args "deploy/local/config.yaml"
    systemProperty "version.tag", "$version"
    environment "VERSION_TAG", "$version"
}
